livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage2_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2
fgsea_Stage4vsStage3_DESeqTidy
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,padj<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
ggsave("/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/fsgea_SumvsWinter.png", livexp_fsgea,width = 6.5, height = 5, dpi =300,)
fgsea_Stage4vsStage2_DESeqTidy2 <- apply(fgsea_Stage4vsStage2_DESeqTidy,2,as.character)
write.table(fgsea_Stage4vsStage2_DESeqTidy2, file='/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/fsgea_liverStage3vs1Tidy.tsv', quote=FALSE, sep='\t')
fgsea_Stage4vsStage3_DESeqTidy2 <- apply(fgsea_Stage4vsStage3_DESeqTidy,2,as.character)
write.table(fgsea_Stage4vsStage3_DESeqTidy2, file='/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/fsgea_liverStage3vs1Tidy.tsv', quote=FALSE, sep='\t')
## STEP 4 : Differential Expression
#LivStage2vs4
lfc <- 0
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
write.table(liv34res, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv34resSigLog, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq_SigLog.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24up, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJUpsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24down, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJDownsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
length(liv34resSig$log2FoldChange)
## STEP 4 : Differential Expression
#LivStage2vs4
lfc <- 1.58
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
write.table(liv34res, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv34resSigLog, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq_SigLog.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24up, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJUpsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24down, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJDownsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
subset(liv34resSig, log2FoldChange <0 )
length(liv34resSig$log2FoldChange)
## STEP 4 : Differential Expression
#LivStage2vs4
lfc <- 0
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
write.table(liv34res, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv34resSigLog, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage3vsStage1_DESeq_SigLog.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24up, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJUpsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24down, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterVsSummerJDownsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
subset(liv34resSig, log2FoldChange <0 )
length(liv34resSig$log2FoldChange)
liv_winter <- factor(c(rep("No",9),rep("Winter",5), rep("No",10)))
liv_winter
liv_stages_organ_frame <-cbind(as.data.frame(liv_stages),as.data.frame(liv_organs),as.data.frame(liv_full1),as.data.frame(liv_sex),as.data.frame(liv_winter))
liv_full1
dds_liv_all <- DESeqDataSetFromMatrix(round(cs_liv.count.tsv$counts), DataFrame(liv_stages_organ_frame), ~liv_sex + liv_winter)
mcols(dds_liv_all) <- cbind(mcols(dds_liv_all), row.names(cs_liv.count.tsv$counts))
rownames(dds_liv_all) <- row.names(cs_liv.count.tsv$counts)
dds_liv_all <- DESeq(dds_liv_all)
#And look at pcas and heatmaps of counts
vst_dds_liv_all <- vst(dds_liv_all)
pcaData_liv_all<- plotPCA(vst_dds_liv_all,intgroup=c("liv_stages","liv_organs"), ntop=300, returnData=TRUE)
ggplot(pcaData_liv_all, aes(x = PC1, y = PC2, color = factor(liv_stages))) +
geom_point(size=2)+
theme_bw()
###LiverHeatmap###
livsampleDists <- dist(t(assay(vst_dds_liv_all)))
livsampleDistMatrix <- as.matrix(livsampleDists)
colnames(livsampleDistMatrix) <- NULL
#make the heatmap
pheatmap(livsampleDistMatrix, clustering_distance_rows=livsampleDists,
clustering_distance_cols = livsampleDists, color = colorRampPalette(rev(brewer.pal(n = 9, name ="Reds")))(255))
#make a heatmap of genes now
livtopVarGenes <- head( order( rowVars( assay(vst_dds_liv_all) ), decreasing=TRUE ), 15 )
heatmap.2( assay(vst_dds_liv_all)[ livtopVarGenes, ], scale="row",
trace="none", dendrogram="column",
col = colorRampPalette( rev(brewer.pal(9, "RdBu")) )(255),
)
## STEP 4 : Differential Expression
#LivStage2vs4
lfc <- 0
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Winter","No"))
liv34res <- results(dds_liv_all, contrast = c("liv_winter","Winter","No"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_winter","Winter","No"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
write.table(liv34res, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Winter_DESeq.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv34resSigLog, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Winter_DESeq_SigLog.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24up, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterUpsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(liv24down, "/Users/bill/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/WinterDownsiglog.txt", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
subset(liv34resSig, log2FoldChange <0 )
length(liv34resSig$log2FoldChange)
rownames(liv34down)
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Winter_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Winter_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
hres2
hranks <- deframe(hres2)
hranks
fgsea_Stage4vsStage3_DESeq <- fgsea(pathways=gmtPathways("/Users/bill/Desktop/c2.cp.kegg.v2023.1.Hs.symbols.gmt.txt"), hranks) %>%
as_tibble() %>%
arrange(padj)
fgsea_Stage4vsStage3_DESeqTidy <- fgsea_Stage4vsStage3_DESeq %>%
as_tibble() %>%
arrange(desc(NES))
fgsea_Stage4vsStage3_DESeqTidy
# Show in a nice table:
fgsea_Stage4vsStage3_DESeqTidy %>%
dplyr::select(-leadingEdge, -ES) %>%
arrange(padj) %>%
DT::datatable()
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,padj<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Winter_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
hres2
hranks <- deframe(hres2)
hranks
fgsea_Stage4vsStage3_DESeq <- fgsea(pathways=gmtPathways("/Users/bill/Desktop/c2.cp.kegg.v2023.1.Hs.symbols.gmt.txt"), hranks) %>%
as_tibble() %>%
arrange(padj)
fgsea_Stage4vsStage3_DESeqTidy <- fgsea_Stage4vsStage3_DESeq %>%
as_tibble() %>%
arrange(desc(NES))
fgsea_Stage4vsStage3_DESeqTidy
# Show in a nice table:
fgsea_Stage4vsStage3_DESeqTidy %>%
dplyr::select(-leadingEdge, -ES) %>%
arrange(padj) %>%
DT::datatable()
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
liv_stages_organ_frame <-cbind(as.data.frame(liv_stages),as.data.frame(liv_organs),as.data.frame(liv_full1),as.data.frame(liv_sex))
dds_liv_all <- DESeqDataSetFromMatrix(round(cs_liv.count.tsv$counts), DataFrame(liv_stages_organ_frame), ~liv_sex + liv_full1)
mcols(dds_liv_all) <- cbind(mcols(dds_liv_all), row.names(cs_liv.count.tsv$counts))
rownames(dds_liv_all) <- row.names(cs_liv.count.tsv$counts)
dds_liv_all <- DESeq(dds_liv_all)
#And look at pcas and heatmaps of counts
vst_dds_liv_all <- vst(dds_liv_all)
pcaData_liv_all<- plotPCA(vst_dds_liv_all,intgroup=c("liv_stages","liv_organs"), ntop=300, returnData=TRUE)
ggplot(pcaData_liv_all, aes(x = PC1, y = PC2, color = factor(liv_stages))) +
geom_point(size=2)+
theme_bw()
liv34res <- results(dds_liv_all, contrast = c("liv_winter","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_winter","Stage3","Stage1"))
## STEP 4 : Differential Expression
#LivStage2vs4
lfc <- 0
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Stage3","Stage1"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
plotCounts(dds_liv_all,"PGM2", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"ALDH3A2", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"G^PC1", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"G6PC1", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"G6PC2", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"G6PC3", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"G6PC1", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"NDUFB4", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"ATP5MC3", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"SDHA", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"NDUFB7", intgroup = "liv_full1", normalized = TRUE)
plotCounts(dds_liv_all,"ATP6V0E1", intgroup = "liv_full1", normalized = TRUE)
plot1
liv34res <- results(dds_liv_all, contrast = c("liv_full1","Stage4","Stage3"))
liv34resX <-  results(dds_liv_all, contrast = c("liv_full1","Stage4","Stage3"))
liv34resSig <- subset(liv34res,liv34res$padj<.05)
liv34resSigLog <- subset(liv34resSig,abs(liv34resSig$log2FoldChange)>=lfc)
liv34up <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)>=0)
liv34down <- subset(liv34resSigLog,(liv34resSigLog$log2FoldChange)<=0)
plotCounts(dds_liv_all,"ATP6V0E1", intgroup = "liv_full1", normalized = TRUE)
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage4vsStage3_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
###FSGEA
Stage4vsStage3_DESeq <- read_delim("~/ShrewProjects/Dehnels_Seasonal_RNAseq2/data/Liver/DifferentialExp/Stage4vsStage3_DESeq.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
hres2
hranks <- deframe(hres2)
hranks
fgsea_Stage4vsStage3_DESeq <- fgsea(pathways=gmtPathways("/Users/bill/Desktop/c2.cp.kegg.v2023.1.Hs.symbols.gmt.txt"), hranks) %>%
as_tibble() %>%
arrange(padj)
fgsea_Stage4vsStage3_DESeqTidy <- fgsea_Stage4vsStage3_DESeq %>%
as_tibble() %>%
arrange(desc(NES))
fgsea_Stage4vsStage3_DESeqTidy
# Show in a nice table:
fgsea_Stage4vsStage3_DESeqTidy %>%
dplyr::select(-leadingEdge, -ES) %>%
arrange(padj) %>%
DT::datatable()
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,padj<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
hres2 <- Stage4vsStage3_DESeq %>%
dplyr::select(Gene, stat) %>%
na.omit() %>%
distinct() %>%
group_by(Gene) %>%
summarize(stat=mean(stat))
hres2
hranks <- deframe(hres2)
hranks
fgsea_Stage4vsStage3_DESeq <- fgsea(pathways=gmtPathways("/Users/bill/Desktop/c2.cp.kegg.v2023.1.Hs.symbols.gmt.txt"), hranks) %>%
as_tibble() %>%
arrange(padj)
fgsea_Stage4vsStage3_DESeqTidy <- fgsea_Stage4vsStage3_DESeq %>%
as_tibble() %>%
arrange(desc(NES))
fgsea_Stage4vsStage3_DESeqTidy
# Show in a nice table:
fgsea_Stage4vsStage3_DESeqTidy %>%
dplyr::select(-leadingEdge, -ES) %>%
arrange(padj) %>%
DT::datatable()
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,padj<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
livexp_fsgea <-ggplot(subset(fgsea_Stage4vsStage3_DESeqTidy,pval<0.05 & (NES > 0 | NES < -1.55)), aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=NES>0)) +
coord_flip() +
labs(x="KEGGPathwayLiver", y="Normalized Enrichment Score") +
scale_fill_manual(values =  c("red", "blue"))+
theme_bw()
livexp_fsgea
### STEP1: Start by loading libraries you will need
### STEP2: Create a mechanism for getting transcript to gene
TOGAsortxdb <- makeTxDbFromGFF("/Users/bill/ShrewProjects/Sorex_Genome2/data/0_refs/GCF_027595985.1_mSorAra2.pri_genomic.gtf",format = "auto")
TOGAsor_k <- keys(TOGAsortxdb, keytype="TXNAME")
TOGAsortx2gene <- AnnotationDbi::select(TOGAsortxdb, TOGAsor_k, "GENEID", "TXNAME")
TOGAsortx2gene <- TOGAsortx2gene[!duplicated(TOGAsortx2gene[,1]),]
TOGAsortx2gene <- na.omit(TOGAsortx2gene)
TOGAsortx2gene
### STEP3: Import kallisto quantifications and write out
TOGA_ml_subset <- read.table("/Users/bill/ShrewProjects/Sorex_Genome2/data/00_transcriptomics/ids/ids_ALLorgans.txt", header = T)
TOGA_ml_subset_files <-file.path("/Users/bill/ShrewProjects/Sorex_Genome2/analysis/total/", TOGA_ml_subset$Sample_name, "abundance.tsv")
names(TOGA_ml_subset_files) <- paste0("sample_", TOGA_ml_subset$Sample_name)
all(file.exists(TOGA_ml_subset_files))
TOGA_ml_subset.count.tsv <- tximport(TOGA_ml_subset_files, type = "kallisto", tx2gene = TOGAsortx2gene, ignoreAfterBar=TRUE)
TOGA_ml_subset.tpm.tsv <- tximport(TOGA_ml_subset_files, type = "kallisto", countsFromAbundance = "lengthScaledTPM", tx2gene = TOGAsortx2gene, ignoreAfterBar=TRUE)
write.table(TOGA_ml_subset.tpm.tsv$abundance, "/Users/bill/ShrewProjects/Sorex_Genome2/analysis/total/TOGA_subset.tpm.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
write.table(TOGA_ml_subset.count.tsv$abundance, "/Users/bill/ShrewProjects/Sorex_Genome2/analysis/total/TOGA_subset.count.tsv", na = "NA", col.names = TRUE, row.names = TRUE, sep = "\t", quote = FALSE)
###STEP4: Create data frames and then deseq data set
TOGA_ml_subset_stages <- factor(c(TOGA_ml_subset$Stage))
TOGA_ml_subset_organs <- factor(c(TOGA_ml_subset$Organ))
TOGA_ml_subset_organs <- factor(c(TOGA_ml_subset$Sex))
###STEP4: Create data frames and then deseq data set
TOGA_ml_subset_stages <- factor(c(TOGA_ml_subset$Stage))
TOGA_ml_subset_organs <- factor(c(TOGA_ml_subset$Organ))
TOGA_ml_subset_sex <- factor(c(TOGA_ml_subset$Sex))
TOGA_stages_organ_frame <-cbind(as.data.frame(TOGA_ml_subset_stages),as.data.frame(TOGA_ml_subset_organs), as.data.frame(TOGA_ml_subset_sex))
#everything looks pretty good
dds_TOGA_all <- DESeqDataSetFromMatrix(round(TOGA_ml_subset.count.tsv$counts), DataFrame(TOGA_stages_organ_frame), ~ TOGA_ml_subset_organs)
mcols(dds_TOGA_all) <- cbind(mcols(dds_TOGA_all), row.names(TOGA_ml_subset.count.tsv$counts))
rownames(dds_TOGA_all) <- row.names(TOGA_ml_subset.count.tsv$counts)
dds_TOGA_all <- DESeq(dds_TOGA_all)
#STEP5: Now visualize with a PCA and heatmap
vst_dds_TOGA_all <- vst(dds_TOGA_all)
pcaData_TOGA_all<- plotPCA(vst_dds_TOGA_all,intgroup=c("TOGA_ml_subset_stages","TOGA_ml_subset_organs"), ntop=750, returnData=TRUE)
percentVar <- round(100 * attr(pcaData_TOGA_all, "percentVar"))
percentVar
ggplot(pcaData_TOGA_all, aes(x = PC1, y = PC2, color = factor(TOGA_ml_subset_organs))) +
geom_point(size=5)+
scale_color_manual(values=c("#191E8A","#999999","#CC79A7","#E69F00", "#56B4E9","#F0E442","#D55E00", "#009E73","#0072B2"))+
theme_bw()
TOGAsampleDists <- dist(t(assay(vst_dds_TOGA_all)))
TOGAsampleDistMatrix <- as.matrix(TOGAsampleDists)
colnames(TOGAsampleDistMatrix) <- NULL
##make the heatmap cortex
pheatmap(TOGAsampleDistMatrix, clustering_distance_rows=TOGAsampleDists,
clustering_distance_cols = TOGAsampleDists, color = colorRampPalette(rev(brewer.pal(n = 9, name ="Reds")))(255))
TOGAtopVarGenes <- head( order( rowVars( assay(vst_dds_TOGA_all) ), decreasing=TRUE ), 750 )
vst_dds_TOGA_all[ TOGAtopVarGenes, ]
TOGAhm2 <- assay(vst_dds_TOGA_all)[ TOGAtopVarGenes, ]
TOGAorgancolors <- c("Cortex","Hippocampus","Hypothalamus","OlfactoryBulb","Liver","Spleen","Muscle","Heart","Aselli")
TOGAorgancolors2 <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","#191E8A")
colnames(TOGAhm2) <- TOGA_ml_subset_organs
TOGAhm2
TOGAorgan_colors <- unlist(lapply(colnames(TOGAhm2),function(x){
for(i in 1:length(TOGAorgancolors)){
if(grepl(TOGAorgancolors[i],x)) return(TOGAorgancolors2[i])
}
}))
library(pheatmap)
heatmap.2( TOGAhm2, scale="row",
trace="none", dendrogram="column", ColSideColors = TOGAorgan_colors,
col = colorRampPalette(brewer.pal(9, "RdBu") )(255),
)
legend(-2276,.85,legend = TOGAorgancolors, fill = TOGAorgancolors2,cex=0.8)
##make the heatmap cortex
pheatmap(TOGAsampleDistMatrix, clustering_distance_rows=TOGAsampleDists,
clustering_distance_cols = TOGAsampleDists, color = colorRampPalette(rev(brewer.pal(n = 9, name ="Reds")))(255))
TOGAtopVarGenes <- head( order( rowVars( assay(vst_dds_TOGA_all) ), decreasing=TRUE ), 750 )
vst_dds_TOGA_all[ TOGAtopVarGenes, ]
TOGAhm2 <- assay(vst_dds_TOGA_all)[ TOGAtopVarGenes, ]
TOGAorgancolors <- c("Cortex","Hippocampus","Hypothalamus","OlfactoryBulb","Liver","Spleen","Muscle","Heart")
TOGAorgancolors2 <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442","#0072B2","#D55E00","#CC79A7")
colnames(TOGAhm2) <- TOGA_ml_subset_organs
TOGAhm2
TOGAorgan_colors <- unlist(lapply(colnames(TOGAhm2),function(x){
for(i in 1:length(TOGAorgancolors)){
if(grepl(TOGAorgancolors[i],x)) return(TOGAorgancolors2[i])
}
}))
library(pheatmap)
heatmap.2( TOGAhm2, scale="row",
trace="none", dendrogram="column", ColSideColors = TOGAorgan_colors,
col = colorRampPalette(brewer.pal(9, "RdBu") )(255),
)
heatmap.2( TOGAhm2, scale="row",
trace="none", dendrogram="column", ColSideColors = TOGAorgan_colors,
col = colorRampPalette(brewer.pal(8, "RdBu") )(255),
)
##make the heatmap cortex
pheatmap(TOGAsampleDistMatrix, clustering_distance_rows=TOGAsampleDists,
clustering_distance_cols = TOGAsampleDists, color = colorRampPalette(rev(brewer.pal(n = 9, name ="Reds")))(255))
TOGAtopVarGenes <- head( order( rowVars( assay(vst_dds_TOGA_all) ), decreasing=TRUE ), 750 )
vst_dds_TOGA_all[ TOGAtopVarGenes, ]
TOGAhm2 <- assay(vst_dds_TOGA_all)[ TOGAtopVarGenes, ]
TOGAorgancolors <- c("Cortex","Hippocampus","Hypothalamus","Olfactory","Liver","Spleen","Muscle","Heart")
TOGAorgancolors2 <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442","#0072B2","#D55E00","#CC79A7")
colnames(TOGAhm2) <- TOGA_ml_subset_organs
TOGAhm2
TOGAorgan_colors <- unlist(lapply(colnames(TOGAhm2),function(x){
for(i in 1:length(TOGAorgancolors)){
if(grepl(TOGAorgancolors[i],x)) return(TOGAorgancolors2[i])
}
}))
library(pheatmap)
heatmap.2( TOGAhm2, scale="row",
trace="none", dendrogram="column", ColSideColors = TOGAorgan_colors,
col = colorRampPalette(brewer.pal(8, "RdBu") )(255),
)
legend(-2276,.85,legend = TOGAorgancolors, fill = TOGAorgancolors2,cex=0.8)
ggplot(pcaData_TOGA_all, aes(x = PC1, y = PC2, color = factor(TOGA_ml_subset_organs))) +
geom_point(size=5)+
scale_color_manual(values=c("#191E8A","#999999","#CC79A7","#E69F00", "#56B4E9","#F0E442","#D55E00", "#009E73","#0072B2"))+
theme_bw()
ggplot(pcaData_TOGA_all, aes(x = PC1, y = PC2, color = factor(TOGA_ml_subset_organs))) +
geom_point(size=5)+
scale_color_manual(values=c("#000000","#E69F00","#56B4E9", "#009E73","#F0E442","#0072B2", "#D55E00","#CC79A7"))+
theme_bw()
ggplot(pcaData_TOGA_all, aes(x = PC1, y = PC2, color = factor(TOGA_ml_subset_organs))) +
geom_point(size=5)+
scale_color_manual(values=c("#009E73","#000000","#E69F00","#56B4E9","#F0E442","#0072B2", "#D55E00","#CC79A7"))+
theme_bw()
ggplot(pcaData_TOGA_all, aes(x = PC1, y = PC2, color = factor(TOGA_ml_subset_organs))) +
geom_point(size=5)+
scale_color_manual(values=c("#009E73", "#D55E00","#E69F00","#56B4E9","#F0E442","#0072B2","#000000","#CC79A7"))+
theme_bw()
ara.sub5
###STEP6: Now proceed with overlap for various analyses
###Now find where they are highest in our rnaseq
#find intersection between lists
#get DESeq normalized
toga_mat <- DESeq2::counts(dds_TOGA_all, normalized=TRUE)
#import shrew positive selection
abs_for <- read_table("/Users/bill/ShrewProjects/Sorex_Genome2/analysis/hyphy/abs_fore/output.txt",
col_names = FALSE)
abs_for
#import transcript to gene and add to column
LT_output_4hp <- read_table("/Users/bill/ShrewProjects/Sorex_Genome2/analysis/hyphy/LT_output_4hp.txt",
col_names = FALSE)
abs_for$X5 <- NA
for (i in seq_len(nrow(abs_for))) {
# Find the matching row
match_row <- match(abs_for[i, "X1"], LT_output_4hp$X3)
# If a match found, assign the corresponding value to X5
if (!is.na(match_row)) {
abs_for[i, "X5"] <- LT_output_4hp[match_row, "X1"]
}
}
#use gene ID to get ensemble gene name
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl",mirror = "useast")
library(biomaRt)
#use gene ID to get ensemble gene name
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl",mirror = "useast")
filters = listFilters(ensembl)
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl",mirror = "useast")
#use gene ID to get ensemble gene name
library(dplyr)
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl",mirror = "useast")
#use gene ID to get ensemble gene name
detach(dplyr)
#use gene ID to get ensemble gene name
detach("dplyr")
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl",mirror = "useast")
#use gene ID to get ensemble gene name
unloadNamespace("ggplot2")
#use gene ID to get ensemble gene name
unloadNamespace("dplyr")
#use gene ID to get ensemble gene name
unloadNamespace("BiocFileCache")
#use gene ID to get ensemble gene name
unloadNamespace("biomart")
#use gene ID to get ensemble gene name
unloadNamespace("dplyr")
#use gene ID to get ensemble gene name
unloadNamespace("BiocFileCache")
#use gene ID to get ensemble gene name
unloadNamespace("biomaRt")
#use gene ID to get ensemble gene name
unloadNamespace("GenomicFeatures")
